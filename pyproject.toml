[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dscim-new"
version = "0.1.0"
description = "Refactored DSCIM library for calculating the social cost of carbon with improved modularity"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Climate Impact Lab", email = "info@impactlab.org"},
]
keywords = ["climate", "economics", "social cost of carbon", "integrated assessment"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
]

dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.5.0",
    "xarray>=2022.3.0",
    "scipy>=1.9.0",
    "netcdf4>=1.6.0",
    "zarr>=2.12.0",
    "scikit-learn>=1.1.0",
    "statsmodels>=0.13.0",
    "pyyaml>=6.0",
    "pydantic>=2.0.0",
    "dask>=2021.9.0",
    "distributed>=2021.9.0",
    "rich>=12.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-xdist>=2.5.0",
    "pytest-benchmark>=4.0.0",
    "pytest-cov>=4.0.0",
    "pytest-html>=3.1.0",
    "pytest-mock>=3.8.0",
    "pytest-sugar>=0.9.4",
    "pytest-clarity>=1.0.0",
    "hypothesis>=6.50.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings>=0.24.0",
    "mkdocstrings-python>=1.7.0",
    "pymdown-extensions>=10.0",
]

jupyter = [
    "jupyter>=1.0.0",
    "jupyterlab>=3.0.0",
    "ipykernel>=6.0.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
]

profiling = [
    "memory-profiler>=0.60.0",
    "line-profiler>=4.0.0",
]

all = [
    "dscim-new[dev,docs,jupyter,profiling]",
]

[project.urls]
Homepage = "https://github.com/ClimateImpactLab/dscim-new"
Documentation = "https://dscim-new.readthedocs.io"
Repository = "https://github.com/ClimateImpactLab/dscim-new"
Issues = "https://github.com/ClimateImpactLab/dscim-new/issues"

[tool.setuptools]
packages = ["dscim_new"]

[tool.setuptools.package-data]
dscim_new = ["config/conf/*.yaml", "config/conf/**/*.yaml"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--showlocals",
]
testpaths = ["tests"]
pythonpath = ["."]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true

[[tool.mypy.overrides]]
module = [
    "numpy.*",
    "pandas.*",
    "xarray.*",
    "scipy.*",
    "sklearn.*",
    "statsmodels.*",
    "dask.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["dscim_new"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
